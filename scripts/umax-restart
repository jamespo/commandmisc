#!/usr/bin/env python3
# -*-Python-*-
# umax-restart - restart a UMaxHosting server automatically via
# python-selenium
# [c] jamespo [at] gmail [dot] com 2019

import configparser
import os.path
from shutil import which
from time import sleep
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options


def getcreds():
    '''get conf from ~/.config/.umaxcreds'''
    config = configparser.RawConfigParser()  # don't interpolate
    config_path = os.path.join(os.path.expanduser("~"), '.config',
                               '.umaxcreds')
    config.read(config_path)
    return config


def main(config):
    '''log in navigate and reboot'''
    user, pw = config.get('credentials', 'username'), \
        config.get('credentials', 'password')
    domain = config.get('server', 'domain')

    chrome_options = Options()
    # chrome_options.add_argument("--headless")
    chrome_options.binary_location = which('chromium')
    driver = webdriver.Chrome(executable_path=which('chromedriver'),
                              options=chrome_options)

    driver.get('https://www.umaxhosting.com/manage/clientarea.php')

    username_field = driver.find_element_by_id("inputEmail")
    username_field.clear()
    username_field.send_keys(user)

    pw_field = driver.find_element_by_id("inputPassword")
    pw_field.clear()
    pw_field.send_keys(pw)
    pw_field.send_keys(Keys.RETURN)

    assert domain in driver.page_source

    server = driver.find_element_by_partial_link_text(domain)
    server.click()

    # TODO: optionally check if server status is Active
    assert 'Reboot' in driver.page_source

    server = driver.find_element_by_partial_link_text('Reboot')
    server.click()

    assert 'Action Completed Successfully' in driver.page_source


if __name__ == "__main__":
    config = getcreds()
    main(config)
    sleep(10)  # DEBUG
